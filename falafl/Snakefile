import random
configfile: "config.yaml"
if config['OUTDIR'] == './':
    OUTDIR = ''
else:
    OUTDIR = config['OUTDIR']
INDIR = config['INDIR']


def gen_patient_list():
    left1,left2 = random.sample(config['PATIENTS']['LEFT'],2)
    right = random.choice(config['PATIENTS']['RIGHT'])
    rectum = random.choice(config['PATIENTS']['RECTUM'])
    patient_list = [left1,left2, right, rectum]
    print(patient_list)
    print(config['PATIENTS']['LEFT'])
    return patient_list

patient_list = gen_patient_list()

def gen_input_file_list(patient_list):

    return ' '.join([INDIR.format(p) for p in patient_list])


def preprocess_output(patient_list):
    output_frac = OUTDIR+"%s_input_frac.npz" % '_'.join(map(str, patient_list))
    output_bin = OUTDIR+"%s_input_bin.npz" % '_'.join(map(str, patient_list))
    
    return output_frac, output_bin

rule process:
    input: 
        gen_input_file_list(patient_list)

    output:
        output_frac = preprocess_output(patient_list)[0],
        output_bin = preprocess_output(patient_list)[1]

    params:
        p = config['p'],
        k = config['k']
    threads: 
        2
    shell:
        "python preprocess.py " \
        "-i {input} " \
        "-of {output.frac} " \
        "-ob {output.bin} " \
        "-p {params.p} " \
        "-k {params.k} "



# rule falafl:
#     input:

#     output:
#     params:
#         q = config['q']
#         run_time = config['RUN_TIME']
#     threads: 
#         2
#     shell:
#         "python falafl.py" \
#         "-ib " \
#         "-if " \
#         "-o " \
#         "-q {params.q} " \
#         "-c {threads}" \
#         "-t {params.run_time}"
 
        