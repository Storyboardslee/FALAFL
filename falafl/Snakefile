import random
configfile: "config.yaml"
OUTDIR = config['OUTDIR'].format(config['p'],config['q'],config['k'],)
INDIR = config['INDIR']
REPEAT = config['REPEAT']


def gen_patient_list():
    left1,left2 = sorted(random.sample(config['PATIENTS']['LEFT'].split(' '),2))
    right = random.choice(config['PATIENTS']['RIGHT'].split(' '))
    rectum = random.choice(config['PATIENTS']['RECTUM'].split(' '))
    patient_list = [left1,left2, right, rectum]
    print(patient_list)
    return patient_list



#patient_list=config['PATIENT_LIST']
def gen_input_file_list(patient_list):

    return [INDIR.format(p) for p in patient_list]


def gen_preprocess_output(patient_list):
    output_frac = OUTDIR+"%s_input_frac.npz" % '_'.join(map(str, patient_list))
    output_bin = OUTDIR+"%s_input_bin.npz" % '_'.join(map(str, patient_list))
    
    return output_frac, output_bin

def gen_falafl_output(patient_list):

    return OUTDIR+"%s_falafl_output.npz" % '_'.join(map(str, patient_list))


#for i in range(REPEAT):
patient_list = gen_patient_list()

rule all: 
    input:
        gen_falafl_output(patient_list)

rule process:
    input: 
        gen_input_file_list(patient_list)

    output:
        frac = gen_preprocess_output(patient_list)[0],
        bin = gen_preprocess_output(patient_list)[1]
        
    params:
        p = config['p'],
        k = config['k']
    threads: 
        2
    shell:
        "python preprocess.py " \
        "-i {input} " \
        "-of {output.frac} " \
        "-ob {output.bin} " \
        "-p {params.p} " \
        "-k {params.k} "



rule falafl:
    input:
        frac = gen_preprocess_output(patient_list)[0],
        bin = gen_preprocess_output(patient_list)[1]
    output:
        gen_falafl_output()

    params:
        q = config['q'],
        run_time = config['RUN_TIME']
    threads: 
        2
    shell:
        "python falafl.py " \
        "-ib {input.bin} " \
        "-if {input.frac} " \
        "-o {output} " \
        "-q {params.q} " \
        "-c {threads} " \
        "-t {params.run_time}"
 
        